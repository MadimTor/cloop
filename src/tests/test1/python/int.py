# This file was autogenerated by cloop - Cross Language Object Oriented Programming

import ctypes

class IDisposable():
	
	VERSION = 1

	def dispose(self):
		pass

class IStatus(IDisposable):
	
	VERSION = 2

	ERROR_1 = int(1)
	ERROR_2 = int(0x2)
	ERROR_12 = int(IStatus_ERROR_1 | IStatus_ERROR_2)

	def dispose(self):
		pass
	def getCode(self):
		pass
	def setCode(self, code):
		pass

class IStatusFactory(IDisposable):
	
	VERSION = 2

	def dispose(self):
		pass
	def createStatus(self):
		pass

class IFactory(IDisposable):
	
	VERSION = 2

	def dispose(self):
		pass
	def createStatus(self):
		pass
	def createCalculator(self, status):
		pass
	def createCalculator2(self, status):
		pass
	def createBrokenCalculator(self, status):
		pass
	def setStatusFactory(self, statusFactory):
		pass

class ICalculator(IDisposable):
	
	VERSION = 4

	def dispose(self):
		pass
	def sum(self, status, n1, n2):
		pass
	def getMemory(self):
		pass
	def setMemory(self, n):
		pass
	def sumAndStore(self, status, n1, n2):
		pass

class ICalculator2(ICalculator):
	
	VERSION = 6

	def dispose(self):
		pass
	def sum(self, status, n1, n2):
		pass
	def getMemory(self):
		pass
	def setMemory(self, n):
		pass
	def sumAndStore(self, status, n1, n2):
		pass
	def multiply(self, status, n1, n2):
		pass
	def copyMemory(self, calculator):
		pass
	def copyMemory2(self, address):
		pass
